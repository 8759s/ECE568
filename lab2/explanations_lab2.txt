#Yuki Saito, 997981732, mintyplanet@gmail.com
#Vishrant Vasavada, 1000209320, v.vasavada@mail.utoronto.ca


We simply followed instructions in resorla-openssl tutorial. A lot of starter code was useful.

Meeting the client specifications:
===========================================================================
1) TCP connection was already handled in the starter code and we decided to keep it as is.

2) Communicating only with SSLv3 or TLSv1 was handled using SSL_CTX_set_options(ctx, SSL_OP_NO_SSLv2).

3) By using SSL_CTX_set_cipher_list, we allowed client to only communicate with the SHA1 hash function with server.

4) Common name, host and E-mails were checked inside check_cert function.

5) Shutdown was properly handled with call SSL_shutdown and freeing the SSL.

6) Also handled premature close with proper error messages after calling SSL_read and SSL_write.



Meeting the server specifications:
===========================================================================
1) initialize_ctx in common.h creates a context that handles all of SSLv2, SSLv3 and TLSv1.

2) The server supports all cipher suites available for SSLv2, SSLv3 and TLSv1.

3. The server asks the client to send its certificate by setting SSL_CTX_set_verify(ctx, SSL_VERIFY_PEER | SSL_VERIFY_CLIENT_ONCE | SSL_VERIFY_FAIL_IF_NO_PEER_CERT, NULL);
If the client does not present a certificate or it is not signed, SSL_accept() will fail, and the server will print the appropriate error message.

4. Client's certificate is verified in verify_client_cert(), and prints the CN and email if the ceritifcate is valid.

5. SSL shutdown is handled in clean_up() where it handles SSL termination handshake, or prints the appropriate error message if it fails.


Testing error cases
===========================================================================
We tested the cases where the server doesn't handle SSLv2,v3 or TLSv1 by temporarily compiling the server with different SSL_OP_NO_(TYPE)

Tested the error handling of a server that doesn't accept SHA1 by temporarily setting SSL_CTX_set_cipher_list(ctx, "ALL:!SHA1")

Certificate validation were checked by generating several keypairs with invalid Common Names or email addresses.

Checked that certificates are signed by CA by testing with a self signed keypair.

Premature SSL shutdown was tested by exiting the program in the middle of handling a request, on the client and also the server side.